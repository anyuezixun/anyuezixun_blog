name: Deploy Hugo site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.101.0'
          extended: true
      
      - name: Debug directory structure
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Themes directory:"
          ls -la themes/ || echo "Themes directory does not exist"
          echo ".gitmodules content:"
          cat .gitmodules || echo ".gitmodules does not exist"
          echo "Hugo config file:"
          ls -la hugo.toml || echo "hugo.toml does not exist"
          ls -la config.toml || echo "config.toml does not exist"
      
      - name: Initialize Hugo site
        run: |
          # 备份重要内容
          mkdir -p /tmp/backup
          if [ -d "content" ]; then
            cp -r content /tmp/backup/ || echo "Failed to backup content"
          fi
          if [ -f "hugo.toml" ]; then
            cp hugo.toml /tmp/backup/ || echo "Failed to backup hugo.toml"
          fi
          if [ -f "config.toml" ]; then
            cp config.toml /tmp/backup/ || echo "Failed to backup config.toml"
          fi
          
          # 删除现有的Hugo目录结构（包括themes）
          rm -rf archetypes content data layouts static resources public themes
          
          # 使用Hugo初始化新站点
          hugo new site . --force
          
          # 恢复备份的内容
          if [ -d "/tmp/backup/content" ]; then
            rm -rf content
            cp -r /tmp/backup/content . || echo "Failed to restore content"
          fi
          
          # 创建示例文章（如果不存在）
          if [ ! -d "content/post" ]; then
            mkdir -p content/post
            cat > content/post/welcome.md << EOF
          ---
          title: "欢迎访问安悦咨询AI探索"
          date: 2024-01-01
          draft: false
          ---
          
          欢迎访问安悦咨询AI探索博客！
          
          这是我们的第一篇文章。
          EOF
          fi
          
          # 显示创建的目录结构
          echo "Hugo site initialized with structure:"
          find . -maxdepth 2 -type d | sort
      
      - name: Setup Hugo Theme
        run: |
          # 克隆主题
          mkdir -p themes
          git clone --branch v3.16.0 https://github.com/CaiJimmy/hugo-theme-stack.git themes/hugo-theme-stack
          
          # 验证主题安装
          echo "Theme directory structure:"
          ls -la themes/hugo-theme-stack
      
      - name: Create custom template override
        run: |
          mkdir -p layouts/partials/head/opengraph/provider
          echo '<meta property="og:title" content="{{ .Title }}" />' > layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:description" content="{{ with .Description }}{{ . }}{{ else }}{{ if .IsPage }}{{ .Summary }}{{ else }}{{ with .Site.Params.description }}{{ . }}{{ end }}{{ end }}{{ end }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:type" content="{{ if .IsPage }}article{{ else }}website{{ end }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:url" content="{{ .Permalink }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ with .Params.image }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:image" content="{{ . | absURL }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ else }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ with .Site.Params.og.image }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:image" content="{{ . | absURL }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ if .IsPage }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ if not .PublishDate.IsZero }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="article:published_time" content="{{ .PublishDate.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ else if not .Date.IsZero }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="article:published_time" content="{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ if not .Lastmod.IsZero }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="article:modified_time" content="{{ .Lastmod.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ else }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ if not .Date.IsZero }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:updated_time" content="{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
      
      - name: Create Hugo config
        run: |
          echo "Creating hugo.toml file"
          cat > hugo.toml << EOF
          baseURL = 'https://anyuezixun.github.io/anyuezixun_blog.github.io/'
          languageCode = 'zh-cn'
          title = '安悦咨询AI探索'
          theme = 'hugo-theme-stack'
          
          [params]
            mainSections = ['post']
            featuredImageField = 'image'
            rssFullContent = true
            favicon = '/favicon.ico'
          
            [params.footer]
              since = 2024
              customText = '安悦咨询AI探索'
          
            [params.dateFormat]
              published = "2006-01-02"
              lastUpdated = "2006-01-02"
          EOF
          
          echo "Verifying hugo.toml exists:"
          ls -la hugo.toml
          echo "Content of hugo.toml:"
          cat hugo.toml
      
      - name: Debug before Hugo build
        run: |
          echo "Complete directory structure before Hugo build:"
          find . -type f -not -path "*/\.*" -not -path "*/node_modules/*" -not -path "*/themes/*" | sort
          echo "Hugo environment:"
          env | grep HUGO
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo version
          echo "Building with baseURL: ${{ steps.pages.outputs.base_url }}"
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 