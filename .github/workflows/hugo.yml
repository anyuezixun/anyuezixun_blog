name: Deploy Hugo site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.101.0'
          extended: true
      
      - name: Debug directory structure
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Themes directory:"
          ls -la themes/ || echo "Themes directory does not exist"
          echo ".gitmodules content:"
          cat .gitmodules || echo ".gitmodules does not exist"
          echo "Hugo config file:"
          ls -la hugo.toml || echo "hugo.toml does not exist"
          ls -la config.toml || echo "config.toml does not exist"
      
      - name: Setup Git Submodules manually
        run: |
          mkdir -p themes
          git clone --branch v3.16.0 https://github.com/CaiJimmy/hugo-theme-stack.git themes/hugo-theme-stack
      
      - name: Create custom template override
        run: |
          mkdir -p layouts/partials/head/opengraph/provider
          echo '<meta property="og:title" content="{{ .Title }}" />' > layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:description" content="{{ with .Description }}{{ . }}{{ else }}{{ if .IsPage }}{{ .Summary }}{{ else }}{{ with .Site.Params.description }}{{ . }}{{ end }}{{ end }}{{ end }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:type" content="{{ if .IsPage }}article{{ else }}website{{ end }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:url" content="{{ .Permalink }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ with .Params.image }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:image" content="{{ . | absURL }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ else }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ with .Site.Params.og.image }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:image" content="{{ . | absURL }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ if .IsPage }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ if not .PublishDate.IsZero }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="article:published_time" content="{{ .PublishDate.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ else if not .Date.IsZero }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="article:published_time" content="{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ if not .Lastmod.IsZero }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="article:modified_time" content="{{ .Lastmod.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ else }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ if not .Date.IsZero }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '<meta property="og:updated_time" content="{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
          echo '{{ end }}' >> layouts/partials/head/opengraph/provider/base.html
      
      - name: Create default config if not exists
        run: |
          echo "Creating hugo.toml file"
          echo "baseURL = 'https://anyuezixun.github.io/anyuezixun_blog.github.io/'" > hugo.toml
          echo "languageCode = 'zh-cn'" >> hugo.toml
          echo "title = '安悦咨询AI探索'" >> hugo.toml
          echo "theme = 'hugo-theme-stack'" >> hugo.toml
          echo "" >> hugo.toml
          echo "[params]" >> hugo.toml
          echo "  mainSections = ['post']" >> hugo.toml
          echo "  featuredImageField = 'image'" >> hugo.toml
          echo "  rssFullContent = true" >> hugo.toml
          echo "  favicon = '/favicon.ico'" >> hugo.toml
          echo "" >> hugo.toml
          echo "  [params.footer]" >> hugo.toml
          echo "    since = 2024" >> hugo.toml
          echo "    customText = '安悦咨询AI探索'" >> hugo.toml
          echo "" >> hugo.toml
          echo "  [params.dateFormat]" >> hugo.toml
          echo "    published = \"2006-01-02\"" >> hugo.toml
          echo "    lastUpdated = \"2006-01-02\"" >> hugo.toml
          echo "Verifying hugo.toml exists:"
          ls -la hugo.toml
          echo "Content of hugo.toml:"
          cat hugo.toml
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo version
          echo "Building with baseURL: ${{ steps.pages.outputs.base_url }}"
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 