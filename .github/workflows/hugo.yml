name: Deploy Hugo site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.92.2
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Debug directory structure
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Themes directory:"
          ls -la themes/ || echo "Themes directory does not exist"
          echo ".gitmodules content:"
          cat .gitmodules || echo ".gitmodules does not exist"
      - name: Setup Git Submodules manually
        run: |
          mkdir -p themes
          git clone --branch v3.16.0 https://github.com/CaiJimmy/hugo-theme-stack.git themes/hugo-theme-stack
      - name: Create custom template override
        run: |
          mkdir -p layouts/partials/head/opengraph/provider
          cat > layouts/partials/head/opengraph/provider/base.html << 'EOF'
          <meta property="og:title" content="{{ .Title }}" />
          <meta property="og:description" content="{{ with .Description }}{{ . }}{{ else }}{{ if .IsPage }}{{ .Summary }}{{ else }}{{ with .Site.Params.description }}{{ . }}{{ end }}{{ end }}{{ end }}" />
          <meta property="og:type" content="{{ if .IsPage }}article{{ else }}website{{ end }}" />
          <meta property="og:url" content="{{ .Permalink }}" />
          {{ with .Params.image }}
          <meta property="og:image" content="{{ . | absURL }}" />
          {{ else }}
          {{ with .Site.Params.og.image }}
          <meta property="og:image" content="{{ . | absURL }}" />
          {{ end }}
          {{ end }}

          {{ if .IsPage }}
          {{ if not .PublishDate.IsZero }}
          <meta property="article:published_time" content="{{ .PublishDate.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />
          {{ else if not .Date.IsZero }}
          <meta property="article:published_time" content="{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />
          {{ end }}
          {{ if not .Lastmod.IsZero }}
          <meta property="article:modified_time" content="{{ .Lastmod.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />
          {{ end }}
          {{ else }}
          {{ if not .Date.IsZero }}
          <meta property="og:updated_time" content="{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}" />
          {{ end }}
          {{ end }}

          {{ with .Params.audio }}
          <meta property="og:audio" content="{{ . }}" />
          {{ end }}
          {{ with .Params.locale }}
          <meta property="og:locale" content="{{ . }}" />
          {{ end }}
          {{ with .Site.Params.title }}
          <meta property="og:site_name" content="{{ . }}" />
          {{ end }}
          {{ with .Params.videos }}
          {{ range . }}
          <meta property="og:video" content="{{ . | absURL }}" />
          {{ end }}
          {{ end }}
          EOF
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 